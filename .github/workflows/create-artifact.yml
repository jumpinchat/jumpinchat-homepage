name: Build artifact
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build release artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '10'

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"
          echo "::set-output name=sha_short::$(echo ${GITHUB_SHA} | cut -c 1-7)"
        env:
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: |
          yarn install

      - name: Build artifact
        run: |
          NODE_ENV=production gulp build
          mkdir jic-homepage
          rsync -av --progress . jic-homepage \
            --exclude jic-homepage \
            --exclude node_modules \
            --exclude src \
            --exclude build \
            --exclude Gulpfile.js \
            --exclude Jenkinsfile \
            --exclude '.*'

          cd jic-homepage
          yarn --frozen-lockfile --production
          cd ..
          zip -r artifact jic-homepage
          rm -rf jic-homepage

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its
          # outputs object, which include a `upload_url`. See this blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact.zip
          asset_name: jic-homepage-${{ steps.vars.outputs.tag }}.zip
          asset_content_type: application/zip
